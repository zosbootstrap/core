---
# tasks file for deploy-rocket

- name: Determine if Rocket Tools installed already
  stat: 
    path: "{{ ROCKET }}/bin"
  register: rocketdir

- name: Derive rocket_install_dir from ROCKET
  set_fact:
    rocket_install_dir: '{{ ROCKET }}'
    rocket_install_fs: '{{ ROCKET }}'

- name: Set up array of directories to be used for size checks
  set_fact:
    rocket_install_dirs:
      - "{{ rocket_pax_dir }}"
      - "{{ rocket_install_fs }}"

- name: Create rocket_install_fs directory
  file:
    path: "{{ rocket_install_fs }}"
    state: directory

- name: Group tasks when rocket directory not present
  block:
  - name: "Get file system for {{ rocket_pax_dir }}"
    shell: "df -k {{ rocket_pax_dir }} | tail -1 | awk ' { print $1; }'" 
    register: rocket_pax_dir_fs

  - name: "Get file system for {{ rocket_install_fs }}"
    shell: "df -k {{ rocket_install_fs }} | tail -1 | awk ' { print $1; }'" 
    register: rocket_install_fs

  - name: "Get required free space if file system different"
    set_fact:
      total_free_space: "{{ rocket_space }}"

  - name: "Double space if both directories in the same file system"
    set_fact:
      total_free_space: "{{ total_free_space | int * 2 }}"
    when: rocket_pax_dir_fs == rocket_install_fs

  - name: print
    debug:
      var: total_free_space

  - name: "Check space of {{ rocket_install_dirs }}"
    include_tasks: dfcheck.yml 
    loop: "{{ rocket_install_dirs }}"

  - name: Create dir to store files
    file:
      path: "{{ rocket_pax_dir }}"
      state: directory

  - name: set up names of files
    set_fact:
    # keep ssl on end since it replaces another ssl with the 1.0.2k version
      gzip_file_name: 'gzip-1.6-edc_b0005.160229.tar'
      unzip_file_name: 'unzip-6.0_b0006.161123.tar.gz'
      bash_file_name: 'bash-4.3_b018.170518.tar.gz'
      git_file_name: 'git-2.14.4_b11.190917.tar.gz'
      curl_file_name: 'curl-7.66.0_b001.191101.tar.gz'
      perl_file_name: 'perl-5.24.0_b007.180202.tar.gz'
      m4_file_name: 'm4-1.4.18_b001.170511.tar.gz'
      make_file_name: 'make-4.1_b0002.160426.tar.gz'
      vim_file_name: 'vim-8.0.22_b003.170615.tar.gz'
      ssl_file_name: 'openssl-1.0.2k_b004.170321.tar.gz'

  - name: set up array of files to send to host
    set_fact:
      gzip_files:
        - "{{ unzip_file_name }}"
        - "{{ bash_file_name }}"
        - "{{ git_file_name }}"
        - "{{ curl_file_name }}"
        - "{{ perl_file_name }}"
        - "{{ m4_file_name }}"
        - "{{ make_file_name }}"
        - "{{ vim_file_name }}"
        - "{{ ssl_file_name }}"
      pkg_files: 
        - "{{ gzip_file_name }}"

  - name: append gzip_files to pkg_files
    set_fact:
      pkg_files: "{{ pkg_files + [item] }}"
    with_items:
      - "{{ gzip_files }}" 

  - name: Copy install files to z/OS USS
    shell: "{{ sftp_path }} {{ ansible_user }}@{{ ansible_host }}:{{ rocket_pax_dir }} <<< $'put {{ pkg_path }}/{{ item }}'"
    delegate_to: localhost
    loop: "{{ pkg_files }}"

#
# unarchive can not be used for 'tar' because our system does not have a /bin/unzip
# unarchive can not be used for 'gz' files because unarchive does not support gz files

  - name: Extract tar
    command: 
      cmd: '/bin/tar -xf {{ rocket_pax_dir }}/{{ gzip_file_name }} -C {{ rocket_install_dir }}'
      warn: no

  - name: Remove old tar files (before)
    raw: 'rm -f {{ rocket_pax_dir }}/*.tar'

  - name: Extract zip files
    shell: '(cd {{ rocket_install_dir }}; {{ rocket_install_dir }}/bin/gzip -d {{ rocket_pax_dir }}/{{ item }} )'
    loop: "{{ gzip_files }}"

  - name: Files to untar
    find:
      paths: "{{rocket_pax_dir }}"
      patterns: "*.tar"
    register: files_to_untar

  - name: Untar files
    command: 
      cmd: '/bin/tar -xoUXf {{ item.path }} -C {{ rocket_install_dir }}'
      warn: no
    with_items: "{{ files_to_untar.files }}"

  - name: Remove old tar files (after)
    file:
      path: "{{ item.path }}"
      state: absent
    with_items: "{{ files_to_untar.files }}"

  when: not rocketdir.stat.exists

- name: How to use ROCKET
  debug:
    msg: [
         "Rocket ported tools installed at {{ ROCKET }} ",
         "Add {{ ROCKET }}\/bin to your PATH and add {{ ROCKET }}\/lib to your LIBPATH to run"
    ]

