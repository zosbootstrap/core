---
# tasks file for deploy-python

- name: Determine if python installed already
  raw: ls {{ PYZ }}/bin 
  register: pythondir
  ignore_errors: True

- name: Group tasks when python directory not present
  block:
  - name: "Get file system for {{ python_pax_dir }}"
    raw: "df -k {{ python_pax_dir }} | tail -1 | awk ' { print $1; }'" 
    register: python_pax_dir_fs

  - name: "Get file system for {{ python_install_fs }}"
    raw: "df -k {{ python_install_fs }} | tail -1 | awk ' { print $1; }'" 
    register: python_install_fs_fs

  - name: "Get required free space if file system different"
    set_fact:
      total_free_space: "{{ python_space }}"
    delegate_to: localhost

  - name: "Double space if both directories in the same file system"
    set_fact:
      total_free_space: "{{ total_free_space | int * 2 }}"
    when: python_pax_dir_fs == python_install_fs_fs
    delegate_to: localhost

  - name: print
    debug:
      var: total_free_space

  - name: "Check space of {{ python_install_dirs }}"
    include_tasks: dfcheck.yml 
    loop: "{{ python_install_dirs }}"

  - name: Create dir to store files
    raw: mkdir -p {{ python_pax_dir }} {{ '; mkdir -p {0}'.format(python_install_fs) if python_install_fs != python_pax_dir else ''}}

  - name: Copy install files to z/OS USS
    shell: "{{ sftp_path }} {{ ansible_user }}@{{ ansible_host }}:{{ python_pax_dir }} <<< $'put {{ pkg_path }}/{{ python_file_name }}.pax.Z'"
    delegate_to: localhost

  - name: Extract directory of files
    raw: '(cd {{ python_install_dir }}; /bin/pax -p p -r -f {{ python_pax_dir }}/{{ python_file_name }}.pax.Z )'

  - name: Clean up pax file
    raw: rm {{ python_pax_dir }}/{{ python_file_name }}.pax.Z

  when: pythondir.rc > 0
