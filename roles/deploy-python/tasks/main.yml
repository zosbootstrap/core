---
# tasks file for deploy-python

- name: Determine if python installed already
  raw: ls {{ PYZ }}/bin 
  register: pythondir
  ignore_errors: True

- name: Group tasks when python directory not present
  block:
  - name: Determine space available for install
    raw: df -k {{ install_filesystem }} | tail -1
    register: dfinstall
    ignore_errors: True

  - name: Determine space available for copy
    raw: df -k {{ tmp_pax_dir }} | tail -1 
    register: dfcopyresult
    ignore_errors: True
 
  - name: Get copyspace
    set_fact:
      dfcopyspace: "{{ dfcopyresult.stdout | regex_search('[.]*([0-9]+)/[0-9]+[.]*','\\1') | join(' ') }}"
    delegate_to: localhost

  - name: Check space
    assert:
      that:
       - dfcopyspace | int > 150000

  - name: Determine space available for install
    raw: df -k {{ install_filesystem }} | tail -1 
    register: dfinstallresult
    ignore_errors: True
 
  - name: Get installspace
    set_fact:
      dfinstallspace: "{{ dfinstallresult.stdout | regex_search('[.]*([0-9]+)/[0-9]+[.]*','\\1') | join(' ') }}"
    delegate_to: localhost

  - name: Check space
    assert:
      that:
       - dfinstallspace | int > 150000
    delegate_to: localhost

  - name: Create dir to store files
    raw: mkdir -p {{ tmp_pax_dir }} {{ '; mkdir -p {0}'.format(install_filesystem) if install_filesystem != tmp_pax_dir else ''}}

  - name: Copy install files to z/OS USS
    shell: "{{ sftp_path }} {{ ansible_user }}@{{ ansible_host }}:{{ tmp_pax_dir }} <<< $'put {{ pax_path }}/{{ python_file_name }}.pax.Z'"
    delegate_to: localhost

  - name: Extract directory of files
    raw: '(cd {{ install_dir }}; /bin/pax -p p -r -f {{ tmp_pax_dir }}/{{ python_file_name }}.pax.Z )'

  - name: Clean up pax file
    raw: rm {{ tmp_pax_dir }}/{{ python_file_name }}.pax.Z

  when: pythondir.rc > 0
