---
# tasks file for deploy-python
- name: print
  debug:
    var: install_dirs

- name: Determine if python installed already
  raw: ls {{ PYZ }}/bin 
  register: pythondir
  ignore_errors: True

- name: Group tasks when python directory not present
  block:
  - name: "Get file system for {{ tmp_pax_dir }}"
    raw: "df -k {{ tmp_pax_dir }} | tail -1 | awk ' { print $1; }'" 
    register: tmp_pax_dir_fs

  - name: "Get file system for {{ install_filesystem }}"
    raw: "df -k {{ install_filesystem }} | tail -1 | awk ' { print $1; }'" 
    register: install_filesystem_fs

  - name: "Get required free space if file system same or different"
    set_fact:
      free_space: "{{ space[ tmp_pax_dir_fs == install_filesystem_fs ] }}"
    delegate_to: localhost

  - name: print
    debug:
      var: free_space

  - name: "Check space of {{ install_dirs }}"
    include_tasks: dfcheck.yml 
    loop: "{{ install_dirs }}"

  - name: Create dir to store files
    raw: mkdir -p {{ tmp_pax_dir }} {{ '; mkdir -p {0}'.format(install_filesystem) if install_filesystem != tmp_pax_dir else ''}}

  - name: Copy install files to z/OS USS
    shell: "{{ sftp_path }} {{ ansible_user }}@{{ ansible_host }}:{{ tmp_pax_dir }} <<< $'put {{ pax_path }}/{{ python_file_name }}.pax.Z'"
    delegate_to: localhost

  - name: Extract directory of files
    raw: '(cd {{ install_dir }}; /bin/pax -p p -r -f {{ tmp_pax_dir }}/{{ python_file_name }}.pax.Z )'

  - name: Clean up pax file
    raw: rm {{ tmp_pax_dir }}/{{ python_file_name }}.pax.Z

  when: pythondir.rc > 0
